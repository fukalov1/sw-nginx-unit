FROM unit:1.34.1-minimal

COPY ./*.pem /docker-entrypoint.d/
COPY ./*.json /docker-entrypoint.d/
COPY ./*.sh /docker-entrypoint.d/


# Обновим репозитории
RUN apt-get clean
# Установим библиотеки
RUN apt-get update && apt-get install -y \
    libz-dev \
    libpng-dev \
    libmemcached-dev \
    libmcrypt-dev \
    libmagickwand-dev --no-install-recommends

# First, we install the required tooling and add Unit's repo.
RUN apt update && apt install -y curl apt-transport-https gnupg2 lsb-release  \
    &&  curl -o /usr/share/keyrings/nginx-keyring.gpg                         \
           https://unit.nginx.org/keys/nginx-keyring.gpg                      \
    && echo "deb [signed-by=/usr/share/keyrings/nginx-keyring.gpg]            \
           https://packages.nginx.org/unit/debian/ `lsb_release -cs` unit"    \
           > /etc/apt/sources.list.d/unit.list

# Next, we install the necessary language module packages and perform cleanup.
RUN apt update && apt install -y                                              \
    unit-php \
    php-mysql \
    php-dom \
    && apt remove -y curl apt-transport-https gnupg2 lsb-release              \
    && apt autoremove --purge -y                                              \
    && rm -rf /var/lib/apt/lists/* /etc/apt/sources.list.d/*.list

#RUN apt-get -qq install -y --no-install-recommends \
#  certbot \
#  python3-certbot-nginx \
#  php-common \
#  php-bcmath \
#  php-curl \
#  php-gd \
#  php-imagick \
#  php-mbstring \
#  php-mysql \
#  php-opcache \
#  php-xml \
#  php-zip

RUN apt-get -y update && apt-get -y install curl

ARG SITE_PATH=/var/www/app

USER root

RUN mkdir -p ${SITE_PATH} && \
chown -R unit:unit ${SITE_PATH} && \
chmod -R 775 ${SITE_PATH}

WORKDIR ${SITE_PATH}

CMD ["unitd","--no-daemon","--control","0.0.0.0:85"]
#CMD ["unitd-debug","--no-daemon","--control","unix:/var/run/control.unit.sock"]

#CMD curl -X PUT --data-binary @unit.json --unix-socket \
#       /var/run/control.unit.sock http://localhost/config/
